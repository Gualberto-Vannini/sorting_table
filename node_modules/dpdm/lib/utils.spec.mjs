/*!
 * Copyright 2019 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2019-07-17 18:45:47
 */
import { __awaiter } from "tslib";
import { dirname, join } from 'path';
import { simpleResolver } from './utils';
describe('util', () => {
    it('should resolve correctly', () => __awaiter(void 0, void 0, void 0, function* () {
        const ext = ['', '.js', '.jsx', '.ts', '.tsx', '.json'];
        const local = yield simpleResolver(__dirname, './bin/dpdm', ext);
        const index = yield simpleResolver(__dirname, '.', ext);
        // dependents on yarn.lock
        const pkg = yield simpleResolver(__dirname, 'string_decoder', ext);
        const deepPkg = yield simpleResolver(dirname(pkg), 'safe-buffer', ext);
        const notFound = yield simpleResolver(__dirname, './utils.tsx', ext);
        expect([local, index, pkg, deepPkg, notFound]).toEqual([
            join(__dirname, 'bin/dpdm.ts'),
            join(__dirname, 'index.ts'),
            join(__dirname, '../node_modules/string_decoder/lib/string_decoder.js'),
            join(__dirname, '../node_modules/string_decoder/node_modules/safe-buffer/index.js'),
            null,
        ]);
    }));
});
//# sourceMappingURL=utils.spec.js.map